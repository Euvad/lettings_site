name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ "*" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run linting (flake8)
        run: |
          source venv/bin/activate
          flake8 --exclude=venv,__pycache__,migrations --max-line-length=88

      - name: Run tests with coverage
        run: |
          source venv/bin/activate
          pytest --cov=. --cov-report=xml

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Tag Docker Image
        run: |
          set -e  # Arrêter en cas d'erreur
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/oc-lettings-site:${{ github.sha }} .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/oc-lettings-site:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/oc-lettings-site:latest

      - name: Push Docker Image to Docker Hub
        run: |
          set -e  # Arrêter en cas d'erreur
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/oc-lettings-site:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/oc-lettings-site:latest

      - name: Logout from Docker Hub
        run: docker logout

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Trigger Render Deployment
        run: |
          set -e  # Arrêter en cas d'erreur
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}

      - name: Verify Deployment
        run: |
          echo "Deployment triggered. Check Render dashboard for status."
